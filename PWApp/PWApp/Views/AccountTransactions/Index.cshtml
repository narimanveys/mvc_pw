@using PWApp.ViewModels
@model PWApp.ViewModels.TransactionViewModel
@{
    ViewBag.Title = "Account Transactions";
    UserAccount userAccount = ViewBag.UserAccount;
    PaginatedList<TransactionHistoryViewModel> transactions = ViewBag.History;
}
<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>

    function submitFunction(id) {
        $.ajax({
            url: "/AccountTransactions/CloneTransaction",
            type: "GET",
            dataType: "json",
            data: { id: id },
            success: function (result) {
                console.log('result');
                location.href = "/AccountTransactions/Index";
            }
        });
    }

</script>

<h2>@ViewBag.Title.</h2>

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <div>Full Name:</div>
            <div>@userAccount.User.FullName</div>
            <div>Your balance:</div>
            <div>@userAccount.AvailableAmount</div>

        </div>
        <div class="col-md-8">
            @using (Html.BeginForm("Index", "AccountTransactions", FormMethod.Post, new { role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <div>
                        <label for="To-field">Receiver:</label>
                    </div>
                    <div >
                        @Html.TextBoxFor(m => m.CreditorEmail, htmlAttributes: new { autocomplete = Url.Action("AutocompleteSearch", "AccountTransactions"), required = "required", id = "To-field", @class = "form-control", list = "users-list" })
                        @Html.ValidationMessageFor(x => x.CreditorEmail)

                        <script type="text/javascript">
                            $("#To-field").autocomplete({

                                source: function (request, response) {
                                    $.ajax({
                                        url: "/AccountTransactions/AutocompleteSearch",
                                        type: "POST",
                                        dataType: "json",
                                        data: { term: request.term },
                                        success: function(data) {
                                            response($.map(data,
                                                function(item) {
                                                    document.getElementById('users-list').innerHTML = '';
                                                    if (data) {
                                                        var dataList = document.getElementById('users-list');

                                                        data.forEach(function(item, i, data) {
                                                            var option = document.createElement('option');
                                                            // Устанавливаем значение, используя элементы массива JSON.
                                                            option.value = item;
                                                            // Добавляем элемент <option> к <datalist>.
                                                            dataList.appendChild(option);
                                                        });
                                                    }
                                                }));
                                        }
                                    });
                                },
                                messages: {
                                    noResults: "", results: ""
                                }
                            });
                        </script>
                        <datalist id="users-list"></datalist>
                    </div>
                </div>
                <div class="form-group">
                    <div class="text-left">
                        <label class="control-label" for="Value-field">Value:</label>
                    </div>
                    <div class="col-xs-8">
                        @Html.EditorFor(m => m.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.Amount)
                    </div>
                </div>
                <div class="form-group">
                    <div>
                        @Html.ValidationMessage("DB")
                        <button class="btn">Send</button>
                    </div>
                </div>

            }
        </div>
    </div>

    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-8">
            <form asp-action="Index" method="get">
                <div class="form-actions no-color">
                    <p>
                        Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                        <input type="submit" value="Search" class="btn btn-default" /> |
                        <a asp-action="Index">Back to Full List</a>
                    </p>
                </div>
            </form>
            <table class="table table-striped table-hover">

                <tr>
                    <th><a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date</a></th>
                    <th><a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Correspondent Name</a></th>
                    <th>Credit</th>
                    <th>Debit</th>
                    <th><a asp-action="Index" asp-route-sortOrder="@ViewData["AmountSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Resulting balance</a></th>
                    <th></th>
                </tr>
                @if (transactions != null && transactions.Any())
                {
                    @foreach (var operation in transactions)
                    {
                        <tr>
                            <td>@operation.Created</td>
                            <td>@operation.CorrespondentName</td>
                            @if (operation.Credit != 0)
                            {
                                <td>@operation.Credit</td>
                            }
                            @if (operation.Credit == 0)
                            {
                                <td>-</td>
                            }
                            @if (operation.Debit != 0)
                            {
                                <td>@operation.Debit</td>
                            }
                            @if (operation.Debit == 0)
                            {
                                <td>-</td>
                            }

                            <td>@operation.ResultingBalance</td>
                            <td>@Html.ActionLink("Clone", null, null, null, new {onclick = "submitFunction(" + @operation.Id + ");"})</td>
                        </tr>
                    }
                }
            </table>
            @{
                var prevDisabled = !transactions.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !transactions.HasNextPage ? "disabled" : "";
            }

            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(transactions.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(transactions.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @nextDisabled">
                Next
            </a>
        </div>
        <div class="col-md-2"></div>
    </div>
</div>